AWSTemplateFormatVersion: 2010-09-09 
Description: s3 Bucket resource template  

Parameters:
  environment:
    Description: Development Envrionment Name
    Type: String
    Default: dev
    AllowedValues:
    - np
    - dev
    - stage
    - qa
    - prod
    
  uniqueIdentifier:
    Description: A unique identifier to associate who this bucket is for
    Type: String
    Default: uniqueId
    
  allowSubnet:
    Description: Subnet to limit access to
    Type: String
    Default: 10.0.1.0
    
  bucketIdentifier:
    Description: Type of bucket to create
    Type: String
    Default: test2
    AllowedValues:
    - test2
    - root
    - pipeline-artifact-store
    - glue-notebook
    

# TAGS
  costCenter:
    Type: String
    Default: 'not defined'
    
  assignmentGroup:
    Type: String
    Default: 'not defined'
    
  applicationGroup:
    Type: String
    Default: 'not defined'
    
  application:
    Type: String
    Default: 'S3 Object Storage'
    
  dataClass:
    Type: String
    Default: 'not defined'
    AllowedValues:
    - InternalUseOnly
    - Public
    - 'not defined'
    
  regulatory:
    Type: String
    Default: 'none'
    AllowedValues:
    - none
    - HIPPA
    - GxP
    - SOX
    - PCI
    - PII

  technicalContact:
    Type: String
    Default: 'not defined'
    
    
  whoBuilt:
    Type: String
    Default: 'not defined'
    
  solutionVP:
    Type: String
    Default: 'not defined'
    
  solutionDirector:
    Type: String
    Default: 'not defined'

  solutionManager:
    Type: String
    Default: 'not defined'
    
  createdFor:
    Type: String
    Default: 'not defined'      

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "S3 Bucket Identifer"
      Parameters:
      - environment
      - uniqueIdentifier
      - bucketIdentifier
    - Label:
        default: "Tags"
      Parameters:
        - costCenter
        - assignmentGroup
        - applicationGroup
        - application
        - dataClass
        - regulatory
        - technicalContact
        - whoBuilt
        - solutionVP
        - solutionDirector
        - solutionManager
        - createdFor
    ParameterLabels:
      environment:
        default: 'Environment where this resource is being used'
      uniqueIdentifier:
        default: 'Unique identifier for this resource'
      bucketIdentifier:
        default: 'Identifier for this resource. Will be appended to uniqueIdentifier to form resource name.'
      costCenter: 
        default: 'CostCenter to tag this resource with'
      assignmentGroup:
        default: 'Assignment Group to associate with resource.'
      applicationGroup:
        default: 'Application Group to associate with resource.'
      application:
        default: 'Description of application'
      dataClass:
        default: 'Type of data stored in this resource.'
      regulatory:
        default: 'Classification if Regulatory data is stored.'
      technicalContact:
        default: 'Email address of person/group to contact for information regarding this resource.'
      whoBuilt:
        default: 'Who built this resource.'
      createdFor:
        default: 'Person/group this resource was created for.'        
      

Resources:

  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [!Ref environment, !Ref uniqueIdentifier, !Ref bucketIdentifier, !Ref 'AWS::Region' ]]
      Tags:
      - {Key: CostCenter, Value: !Ref costCenter}
      - {Key: TechnicalContact, Value: !Ref technicalContact}
      - {Key: AssignmentGroup, Value: !Ref assignmentGroup}
      - {Key: applicationGroup, Value: !Ref applicationGroup}
      - {Key: application, Value: !Ref application}
      - {Key: dataClass, Value: !Ref dataClass}
      - {Key: regulatory, Value: !Ref regulatory}
      - {Key: technicalContact, Value: !Ref technicalContact}
      - {Key: whoBuilt, Value: !Ref whoBuilt}
      - {Key: createdFor, Value: !Ref createdFor}
      LifecycleConfiguration:
        Rules:
          - Id: "Transition to Standard-IA after 90 days"
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            NoncurrentVersionExpirationInDays: 182
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 90
              - StorageClass: GLACIER
                TransitionInDays: 181
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 90
              - StorageClass: GLACIER
                TransitionInDays: 181      
            
      
  s3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref s3Bucket
      PolicyDocument:
        Id: !Join [ "-", [ !Ref uniqueIdentifier, "s3-policy"]]
        Version: "2012-10-17"
        Statement:
#        We will uncomment this when we want to block to a specific subnet
        - Sid: "Allow access only from this subnet"
          Effect: "Allow"
          Principal: "*"
          Action: "s3:*"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition:
            IpAddress: 
              aws:sourceIp: 10.0.0.0/8
        - Sid: "Allow access only from this subnet"
          Effect: "Allow"
          Principal: "*"
          Action: "s3:*"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition:
            IpAddress: 
              aws:sourceIp: 198.89.160.0/24            
        - Sid: "Deny Insecure Connections"
          Effect: "Deny"
          Principal: "*"
          Action: "s3:*"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition: {Bool: {"aws:SecureTransport": "false"}}
        - Sid: "Deny unencrypted upload (require --sse)"
          Effect: "Deny"
          Principal: "*"
          Action: "s3:PutObject"
          Resource:
          - !Sub arn:aws:s3:::${s3Bucket}/*
          Condition: {StringNotEquals: {"s3:x-amz-server-side-encryption":"AES256"}}
#        - Sid: "Allow access from another account"
#          Effect: "Allow"
#          Principal:
#            AWS: 
#            - "arn:aws:iam::ACCOUNT_ID:root"
#          Action:
#          - s3:GetBucketLocation
#          - s3:ListBucket
#          - s3:PutObject
#          - s3:AbortMultipartUpload
#          - s3:ListMultipartUploadParts
#          - s3:ListBucketMultipartUploads
#          Resource:
#          - !Sub arn:aws:s3:::${s3Bucket}
#          - !Sub arn:aws:s3:::${s3Bucket}/*         
          
          
          
          
            
           
Outputs:
  s3BucketArn:
    Description: 's3 bucket arn'
    Value: !GetAtt s3Bucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-bucket-arn'       