AWSTemplateFormatVersion: "2010-09-09"
Description: "pipeline for lambda deployment"

Parameters:
  environment:
    Description: Development Envrionment Name
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "qa"
      - "prod"

  uniqueIdentifier:
    Type: String
    Description: "a unique organization identifier. This will be the prefix for the created resources."

  applicationName:
    Type: String
    Description: "the name of the application that the pipeline builds. the unique identifier will be added as a prefix"

  githubOwner:
    Type: String

  repositoryName:
    Type: String

  branchName:
    Type: String

  githubSecret:
    Type: String
    NoEcho: true

  githubOauthToken:
    Type: String
    Description: "this comes from github. if you have a service acount in github for this build, it will be the oauth token associated with that account."
    NoEcho: true

  stackNameToUpdate:
    Type: String
    Description: "the name of the lambda cloudformation stack"

  deploymentTemplateName:
    Type: String

  deploymentTemplateConfiguration:
    Type: String

  artifactsStoreBucket:
    Type: String

  stackNumber:
    Type: String
    Description: "if you are creating more than one stack with the same resources"


Metadata:
  Author:
    Description: "Alex Nelson <nelsone@nelsone.io>"
  AWS::Cloudformation::Interface:
    ParameterGroups:
      - Label:
          default: "General Information"
        Parameters:
          - "environment"
          - "uniqueIdentifier"
          - "applicationName"
      - Label:
          default: "Github Information"
        Parameters:
          - githubSecret
          - githubOauthToken
      - Label:
          default: "Cloudformation Information"
        Parameters:
          - stackNameToUpdate
          - deploymentTemplateName

    ParameterLabels:
      environment:
        default: "Development environment for this template"
      uniqueIdentifier:
        default: "Unique Identifier"
      applicationName:
        default: "Application Name"
      githubSecret:
        default: "Github Secret"
      githubOauthToken:
        default: "Github oauth Token"
      stackNameToUpdate:
        default: "The cloudformation stack to update"
      deploymentTemplateName:
        default: "The name of the cloudformation deployment template"

Resources:

  codepipelineSNS:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack-${stackNumber}-cloudformation-pipeline-alerts
      TopicName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack-${stackNumber}-cloudformation-pipeline-alerts

  cloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      Policies:
        - PolicyName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack-${stackNumber}-cloudformation-role
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                Effect: Allow
                Resource: '*'
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'

  codePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join [ "-", [ !Ref uniqueIdentifier, !Ref environment, !Ref applicationName, "cloudformation-pipeline-service-role", !Ref stackNumber ]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
                - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Join [ "-", [ !Ref uniqueIdentifier, !Ref environment, !Ref applicationName, "pipeline-service-role-policy", !Ref stackNumber ]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudwatch:*'
                  - 's3:*'  # need to change this!
                  - 'sns:Publish'
                  - 'iam:PassRole'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceAttribute'
                  - 'ec2:DescribeInstanceAttributes'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeIamInstanceProfileAssociations'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeImages'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'ec2:StartInstances'
                  - 'ec2:RunInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:RebootInstances'
                  - 'ec2:TerminateInstances'
                  - 'ec2:CreateTags'
                  - 'ec2:DeleteTags'
                  - 'ec2:*'
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - "ssm:GetParameters"
                Resource: '*'

  applicationPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-cloudformation-stack-${stackNumber}-pipeline
      RoleArn: !GetAtt codePipelineServiceRole.Arn
      ArtifactStore:
        Location: !Ref artifactsStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref githubOwner
                Repo: !Ref repositoryName
                Branch: !Ref branchName
                OAuthToken: !Ref githubOauthToken
                PollForSourceChanges: false
              RunOrder: 1
#        - Name: CreateStack
#          Actions:
#            - Name: !Sub ${uniqueIdentifier}-${applicationName}-Pipeline
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: 1
#              Configuration:
#                ActionMode: REPLACE_ON_FAILURE
#                RoleArn: !GetAtt codePipelineServiceRole.Arn
#                StackName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack #todo: add deployment number
#                TemplatePath: !Sub "SourceOutput::${deploymentTemplateName}"
#              InputArtifacts:
#                - Name: SourceOutput
#              OutputArtifacts:
#                - Name: templateSource
#              RunOrder: 2
        - Name: CreateChangeSet
          Actions:
            - Name: createChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack-${stackNumber}
                RoleArn: !GetAtt codePipelineServiceRole.Arn
                TemplatePath: !Sub SourceOutput::templates/${deploymentTemplateName}
                TemplateConfiguration: !Sub SourceOutput::configurations/${deploymentTemplateConfiguration}
                ChangeSetName: !Join ["", [ !Ref stackNameToUpdate, "ChangeSet" ]]
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 4
        - Name: Approval
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: 'Do you want to execute a change set against the stack?'
              RunOrder: 5
        - Name: DeployChangeSet
          Actions:
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join ["", [ !Ref stackNameToUpdate, "ChangeSet" ]]
                StackName: !Sub ${uniqueIdentifier}-${environment}-${applicationName}-stack-${stackNumber}
              RunOrder: 6

  githubWebHook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref githubSecret
      Filters:
        - JsonPath: $.ref
          MatchEquals: "refs/heads/${Branch}"
      TargetPipeline: !Ref applicationPipeline
      TargetAction: SourceAction
      Name: !Join ["-", [ !Ref uniqueIdentifier, !Ref environment, !Ref applicationName, !Ref "AWS::Region"]]
      TargetPipelineVersion: !GetAtt
        - applicationPipeline
        - Version
      RegisterWithThirdParty: true

Outputs:
  CodePipelineServiceRole:
    Description: Role used for Pipeline
    Value: !GetAtt codePipelineServiceRole.Arn
    Export:
      Name: !Sub "${uniqueIdentifier}-${environment}-${applicationName}-pipeline-role-name-${stackNumber}"
